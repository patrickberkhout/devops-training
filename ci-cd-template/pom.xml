<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.patrickberkhout.devopstraining</groupId>
	<artifactId>ci-cd-template</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>continuous integration and continuous deployment template</name>
	<description>

	</description>

	<url>https://github.com/patrickberkhout/devops-training</url>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<distribution>repo</distribution>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
	</properties>
	<repositories>
		<repository>
			<id>jbss-ga</id>
			<name>JBoss GA</name>
			<url>https://maven.repository.redhat.com/ga/</url>
		</repository>
	</repositories>
	<dependencyManagement>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.jboss.teiid</groupId>
			<artifactId>teiid-jdbc</artifactId>
			<version>8.12.5.redhat-8</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.teiid</groupId>
			<artifactId>teiid-jboss-admin</artifactId>
			<version>8.12.5.redhat-8</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.teiid</groupId>
			<artifactId>teiid-admin</artifactId>
			<version>8.12.5.redhat-8</version>
		</dependency>
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>4.1</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/docker</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/docker-template</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>sample</groupId>
									<artifactId>sample-vdb</artifactId>
									<version>1.0.0</version>
									<type>xml</type>
									<overWrite>true</overWrite>
									<outputDirectory>${project.build.directory}/docker/containers/teiid/init</outputDirectory>
									<destFileName>sample-vdb-1.0.0-vdb.xml</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<id>docker-compose-down-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>docker-compose</executable>
							<workingDirectory>${project.build.directory}/docker</workingDirectory>
							<arguments>
								<argument>down</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>docker-compose-down-install</id>
						<phase>install</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>docker-compose</executable>
							<workingDirectory>${project.build.directory}/docker</workingDirectory>
							<arguments>
								<argument>down</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>docker-compose-up</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>docker-compose</executable>
							<workingDirectory>${project.build.directory}/docker</workingDirectory>
							<arguments>
								<argument>up</argument>
								<argument>-d</argument>
								<argument>--build</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>

			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20.1</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.20.1</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>

